function config($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/index/dashboard");var authenticated=["$window","$q",function($window,$q){var deferred=$q.defer();return $window.sessionStorage.token?deferred.resolve():deferred.reject("Not logged in"),deferred.promise}];$stateProvider.state("index",{"abstract":!0,url:"/index",templateUrl:"views/common/content.html",resolve:{authenticated:authenticated}}).state("index.main",{url:"/main",templateUrl:"views/main.html",data:{pageTitle:"Example view"},resolve:{authenticated:authenticated}}).state("index.minor",{url:"/minor",templateUrl:"views/minor.html",data:{pageTitle:"Example view"},resolve:{authenticated:authenticated}}).state("index.dashboard",{url:"/dashboard",templateUrl:"views/dashboard.html",data:{pageTitle:"Dashboard"},resolve:{authenticated:authenticated}}).state("index.objective",{url:"/objectives/:objectiveId",templateUrl:"views/objective_dashboard.html",data:{pageTitle:"Objective"},resolve:{authenticated:authenticated}}).state("index.new_objective",{url:"/objective/new",templateUrl:"views/new_objective.html",data:{pageTitle:"Create Objective"},resolve:{authenticated:authenticated}}).state("login",{url:"/login",templateUrl:"views/login.html"})}function pageTitle($rootScope,$timeout){return{link:function(scope,element){var listener=function(event,toState,toParams,fromState,fromParams){var title="Trackto | Track your goals";toState.data&&toState.data.pageTitle&&(title="Trackto | "+toState.data.pageTitle),$timeout(function(){element.text(title)})};$rootScope.$on("$stateChangeStart",listener)}}}function sideNavigation($timeout){return{restrict:"A",link:function(scope,element){$timeout(function(){element.metisMenu()})}}}function iboxTools($timeout){return{restrict:"A",scope:!0,templateUrl:"views/common/ibox_tools.html",controller:function($scope,$element){$scope.showhide=function(){var ibox=$element.closest("div.ibox"),icon=$element.find("i:first"),content=ibox.find("div.ibox-content");content.slideToggle(200),icon.toggleClass("fa-chevron-up").toggleClass("fa-chevron-down"),ibox.toggleClass("").toggleClass("border-bottom"),$timeout(function(){ibox.resize(),ibox.find("[id^=map-]").resize()},50)},$scope.closebox=function(){var ibox=$element.closest("div.ibox");ibox.remove()}}}}function objectiveHeader($timeout){return{restrict:"A",scope:!0,templateUrl:"views/common/objective_header.html",controller:function($scope,$element){$scope.showhide=function(){var ibox=$element.closest("div.ibox"),icon=$element.find("i:first"),content=ibox.find("div.ibox-content");content.slideToggle(200),icon.toggleClass("fa-chevron-up").toggleClass("fa-chevron-down"),ibox.toggleClass("").toggleClass("border-bottom"),$timeout(function(){ibox.resize(),ibox.find("[id^=map-]").resize()},50)},$scope.closebox=function(){var ibox=$element.closest("div.ibox");ibox.remove()}}}}function minimalizeSidebar($timeout){return{restrict:"A",template:'<a class="navbar-minimalize minimalize-styl-2 btn btn-primary " href="" ng-click="minimalize()"><i class="fa fa-bars"></i></a>',controller:function($scope,$element){$scope.minimalize=function(){$("body").toggleClass("mini-navbar"),!$("body").hasClass("mini-navbar")||$("body").hasClass("body-small")?($("#side-menu").hide(),setTimeout(function(){$("#side-menu").fadeIn(500)},100)):$("body").hasClass("fixed-sidebar")?($("#side-menu").hide(),setTimeout(function(){$("#side-menu").fadeIn(500)},300)):$("#side-menu").removeAttr("style")}}}}function subobjectiveEditModal($timeout){return{restrict:"E",transclude:!0,scope:{modalId:"@",modalTitle:"@",successButtonText:"@",submitCreateSubobjective:"&"},templateUrl:"views/common/modal.html"}}function CreateObjectiveController($scope,$window,toastr,StepsService,ObjectiveFactory){function clearObjectiveFields(){$scope.objective={name:"",description:"",subobjectives_attributes:[{name:"",description:""}]}}function cleanObjective(){var objective=$scope.objective,subs=objective.subobjectives_attributes;for(var i in subs)""===subs[i].name&&""===subs[i].description&&subs.splice(i,1);return objective.subobjectives_attributes=subs,objective}$scope.objective={name:"",description:"",subobjectives_attributes:[{name:"",description:""}]},$scope.validateObjectivePortion=function(){$scope.objective.name&&0!==$scope.objective.name.length||(toastr.error("Objective name is required","Error"),StepsService.steps().cancel())},$scope.validateSubbjectivePortion=function(){var valid=!0,error="";if($scope.objective.subobjectives_attributes.length>0){var subs=$scope.objective.subobjectives_attributes;for(var i in subs)""===subs[i].name&&(error="A subobjective must have a name",valid=!1)}else error="Atleast one subobjective is required",valid=!1;valid?$scope.createObjective():toastr.error(error,"Error")},$scope.showRemoveSubobjectiveButton=function(){return $scope.objective.subobjectives_attributes.length>1},$scope.showAddSubobjectiveButton=function(){var subs=$scope.objective.subobjectives_attributes,shouldShow=!0;for(var i in subs)""===subs[i].name&&""===subs[i].description&&(shouldShow=!1);return shouldShow},$scope.removeSub=function(index){$scope.objective.subobjectives_attributes.splice(index,1)},$scope.addAnotherSub=function(){var newSub={name:"",description:"",active:!0};$scope.objective.subobjectives_attributes.push(newSub)},$scope.createObjective=function(){var objective=cleanObjective();ObjectiveFactory.createObjective(objective).success(function(obj){$window.location.href="/#/index/objectives/"+obj.id,toastr.success("You successfully created an objective","Success"),$scope.$emit("tidyUp"),clearObjectiveFields()}).error(function(error){toastr.error("The objective could not be created","Error")})}}function LoginController($scope,$window,toastr,UserFactory){$scope.message="",$scope.auth_token="",$scope.isLogin=!0,$scope.user={email:"",password:""},$scope.changeToSignup=function(){$scope.isLogin=!1},$scope.changeToLogin=function(){$scope.isLogin=!0},$scope.clearInfo=function(){$scope.user={email:"",password:""}},$scope.login=function(){console.log("Logging In!"),UserFactory.loginUser($scope.user).success(function(userObj){$window.sessionStorage.token=userObj.auth_token,$window.location.href="/",$scope.clearInfo()}).error(function(errorObj){delete $window.sessionStorage.token,toastr.error(errorObj.error,"Error"),$scope.clearInfo()})},$scope.signup=function(){console.log("Signing Up!"),UserFactory.registerUser($scope.user).success(function(userObj){$scope.login()}).error(function(errorObj){toastr.error(errorObj.error,"Error")})},$scope.logout=function(){UserFactory.logoutUser().success(function(obj){delete $window.sessionStorage.token,$window.location.href="#/login"}).error(function(errorObj){$scope.message=errorObj.message})}}function MainCtrl($scope){this.logo="img/tracktosmaller.png",$scope.$on("tidyUp",function(event){$scope.$broadcast("resetNav")}),$scope.$on("progressMade",function(event){$scope.$broadcast("resetProgressOverview")})}function ObjectiveDashboard($scope,DashboardFactory){function getObjectivesOverview(){DashboardFactory.getObjectivesOverview().success(function(data){$scope.objectivesCount=data.objectivesCount,$scope.subobjectivesCount=data.subobjectivesCount,$scope.progressCount=data.progressCount}).error(function(error){$scope.status="Unable to load objectives data: "+error.message})}function getProgressOverview(){DashboardFactory.getProgressOverview($scope.activeTimeFrame).success(function(prg){$scope.progress=prg.progress,reloadChartData()}).error(function(error){$scope.status="Unable to load objectives data: "+error.message})}function reloadChartData(){var progress=$scope.progress;$scope.labels=[],$scope.data=[];var data=[];for(var key in progress)$scope.labels.push(capitalizeFirstLetter(key)),data.push(progress[key]);$scope.data.push(data)}function capitalizeFirstLetter(string){return string.charAt(0).toUpperCase()+string.slice(1)}$scope.objectivesCount=0,$scope.subobjectivesCount=0,$scope.progressCount=0,$scope.activeTimeFrame="Days",getObjectivesOverview(),getProgressOverview(),$scope.changeProgressTimeFrame=function(timeframe){$scope.activeTimeFrame=timeframe,getProgressOverview()},$scope.progress={},$scope.labels=[],$scope.series=["Objective Progress"],$scope.data=[],$scope.showNoDataMessage=function(){return $scope.data.length>0?!0:!1},$scope.$on("resetProgressOverview",function(event){getProgressOverview()})}function ObjectiveDetailCtrl($scope,$stateParams,$window,toastr,ObjectiveFactory){function getObjective(objectiveId){ObjectiveFactory.getObjective(objectiveId).success(function(obj){$scope.objective=obj.objective,$scope.subobjectives=obj.subobjectives,Object.keys($scope.subobjectives).length>0&&reloadBreakdownChartData()}).error(function(error){error&&($scope.status="Unable to load objectives data: "+error.message)})}function reloadBreakdownChartData(){var subs=$scope.subobjectives;$scope.breakdownLabels=[],$scope.breakdownData=[];for(var i in subs)$scope.breakdownLabels.push(subs[i].name),$scope.breakdownData.push(subs[i].progress)}function getObjectiveProgressTrend(objectiveId){ObjectiveFactory.getProgressTrendForObjective(objectiveId,$scope.activeTimeFrame).success(function(obj){$scope.progressTrend=obj,Object.keys(obj).length>0&&reloadProgressTrendChartData()}).error(function(error){error&&($scope.status="Unable to load progress trend data: "+error.message)})}function reloadProgressTrendChartData(){var prg=$scope.progressTrend;$scope.progressTrendSeries=[],$scope.progressTrendLabels=[],$scope.progressTrendData=[];for(var sub in prg){$scope.progressTrendSeries.push(sub);var dataPoints=prg[sub],newDataArray=[];for(var i in dataPoints)$scope.progressTrendLabels.indexOf(i)<0&&$scope.progressTrendLabels.push(i),newDataArray.push(dataPoints[i]);$scope.progressTrendData.push(newDataArray)}}$scope.objective={},$scope.subobjectives=[],$scope.progressTrend={},$scope.selected_id=$stateParams.objectiveId,$scope.breakdownLabels=[],$scope.breakdownSeries=["Progress Breakdown"],$scope.breakdownData=[],$scope.activeTimeFrame="Weeks",$scope.progressTrendLabels=[],$scope.progressTrendSeries=[],$scope.progressTrendData=[],$scope.createSubobjective={name:"",description:""},$scope.submitCreateSubobjective=function(){$scope.createSubobjective.name?ObjectiveFactory.createSubobjective($scope.selected_id,$scope.createSubobjective).success(function(subobjective){toastr.success("You have successfully create the subobjective: "+subobjective.name,"Success"),angular.element("#createSubModal").modal("hide"),getObjective($scope.selected_id)}).error(function(error){error&&toastr.error("Something went wrong and your subobjective could not be created","Error")}):toastr.error("A subobjective must have a name","Error")},getObjective($scope.selected_id),getObjectiveProgressTrend($scope.selected_id),$scope.isArchived=function(){return $scope.objective.archived||!1},$scope.hideNoDataMessage=function(){return $scope.objective.sub_progress>0},$scope.longestStreakMessage=function(){return $scope.objective.hasOwnProperty("longest_streak")?$scope.objective.longest_streak.begin_date+" - "+$scope.objective.longest_streak.end_date:""},$scope.currentStreakMessage=function(){return $scope.objective.hasOwnProperty("current_streak")?$scope.objective.current_streak.begin_date+" - Today":""},$scope.changeProgressTimeFrame=function(timeframe){$scope.activeTimeFrame=timeframe,getObjectiveProgressTrend($scope.selected_id)},$scope.deleteObjective=function(){var objectiveId=$scope.selected_id;ObjectiveFactory.deleteObjective(objectiveId).success(function(obj){$scope.$emit("tidyUp"),$window.location.href="#/index/dashboard",toastr.info("You have successfully deleted the objective: "+obj.name,"Success")}).error(function(error){error&&toastr.error("Unable to load objective","error")})},$scope.archiveObjective=function(){var objectiveId=$scope.selected_id;ObjectiveFactory.archiveObjective(objectiveId).success(function(obj){$scope.objective=obj,$scope.$emit("tidyUp"),toastr.info("You have successfully archived the objective: "+obj.name,"Success")}).error(function(error){error&&toastr.error("Unable to archive the objective","error")})},$scope.unarchiveObjective=function(){var objectiveId=$scope.selected_id;ObjectiveFactory.unarchiveObjective(objectiveId).success(function(obj){$scope.objective=obj,$scope.$emit("tidyUp"),toastr.info("You have successfully unarchived the objective: "+obj.name,"Success")}).error(function(error){error&&toastr.error("Unable to archive the objective","error")})},$scope.addSubobjective=function(){console.log("Add Subobjective!")}}function ObjectivesNavigationCtrl($scope,ObjectiveFactory){function getObjectives(){ObjectiveFactory.getObjectives().success(function(objs){$scope.objectives=objs.objectives}).error(function(error){$scope.status="Unable to load objectives data: "+error.message})}$scope.objectives=[],getObjectives(),$scope.filterByMainMenu=function(objective){return objective.archived===!1?objective:!1},$scope.filterBySecondaryMenu=function(objective){return objective.archived===!0?objective:!1},$scope.showArchivedMenu=function(){var objs=$scope.objectives;for(var i in objs)if(objs[i].archived===!0)return!0;return!1},$scope.$on("resetNav",function(event){getObjectives()})}function ObjectivesTodayCtrl($scope,toastr,ObjectiveFactory){function getSubobjectivesToday(){ObjectiveFactory.getSubobjectivesToday().success(function(objs){$scope.objectives=objs.subobjectives}).error(function(error){$scope.status="Unable to load subobjectives data: "+error.message})}$scope.objectives=[],getSubobjectivesToday(),$scope.addProgressSubmit=function(index,subobjectiveId){ObjectiveFactory.addProgressSubobjective(subobjectiveId).success(function(subobjective){$scope.objectives.splice(index,1),$scope.$emit("progressMade")}).error(function(error){toastr.error("Unable to add progress to the subojective","error")})},$scope.ignoreSubobjectiveSubmit=function(index,subobjectiveId){$scope.objectives.splice(index,1)}}function ObjectiveFactory($http){var urlBase="/api/objectives",timeZoneOffset=-60*(new Date).getTimezoneOffset(),objectiveFactory={};return objectiveFactory.getObjectives=function(){return $http.get(urlBase)},objectiveFactory.getObjective=function(objectiveId){var params="timezoneOffsetSeconds="+timeZoneOffset;return $http.get(urlBase+"/"+objectiveId+"?"+params)},objectiveFactory.createObjective=function(objective){return $http.post(urlBase,{objective:objective})},objectiveFactory.deleteObjective=function(objectiveId){return $http["delete"](urlBase+"/"+objectiveId)},objectiveFactory.archiveObjective=function(objectiveId){return $http.post(urlBase+"/"+objectiveId+"/archive")},objectiveFactory.unarchiveObjective=function(objectiveId){return $http.post(urlBase+"/"+objectiveId+"/unarchive")},objectiveFactory.getSubobjectivesToday=function(){return $http.get("/api/subobjectives_today")},objectiveFactory.getProgressTrendForObjective=function(objectiveId,timeFrame){var params="timezoneOffsetSeconds="+timeZoneOffset+"&timeFrame="+timeFrame;return $http.get(urlBase+"/"+objectiveId+"/progress_trend?"+params)},objectiveFactory.createSubobjective=function(objectiveId,subobjective){return $http.post("/api/subobjectives/",{objective_id:objectiveId,subobjective:subobjective})},objectiveFactory.addProgressSubobjective=function(subobjectiveId){return $http.post("/api/subobjectives/"+subobjectiveId+"/add_progress")},objectiveFactory}function DashboardFactory($http){var urlBase="/api/",timeZoneOffset=-60*(new Date).getTimezoneOffset();return dashboardFactory={},dashboardFactory.getProgressOverview=function(timeFrame){var params="timezoneOffsetSeconds="+timeZoneOffset+"&timeFrame="+timeFrame;return $http.get(urlBase+"progress_overview?"+params)},dashboardFactory.getObjectivesOverview=function(){return $http.get(urlBase+"objectives_overview")},dashboardFactory}function UserFactory($http){var urlBase="/api/",userFactory={};return userFactory.loginUser=function(userObj){var params="user[email]="+userObj.email+"&user[password]="+userObj.password;return $http.post(urlBase+"login?"+params)},userFactory.registerUser=function(userObj){var params="user[email]="+userObj.email+"&user[password]="+userObj.password;return $http.post(urlBase+"register?"+params)},userFactory.logoutUser=function(userObj){return $http["delete"](urlBase+"logout")},userFactory}$(document).ready(function(){function fix_height(){var heightWithoutNavbar=$("body > #wrapper").height()-61;$(".sidebard-panel").css("min-height",heightWithoutNavbar+"px");var navbarHeigh=$("nav.navbar-default").height(),wrapperHeigh=$("#page-wrapper").height();navbarHeigh>wrapperHeigh&&$("#page-wrapper").css("min-height",navbarHeigh+"px"),wrapperHeigh>navbarHeigh&&$("#page-wrapper").css("min-height",$(window).height()+"px")}$(window).bind("load resize scroll",function(){$("body").hasClass("body-small")||fix_height()}),setTimeout(function(){fix_height()})}),$(function(){$(window).bind("load resize",function(){$(this).width()<769?$("body").addClass("body-small"):$("body").removeClass("body-small")})}),function(){angular.module("trackto",["ui.router","ui.bootstrap","toastr","chart.js","angular-steps"])}(),angular.module("trackto").config(config).run(function($rootScope,$state,$log){$rootScope.$on("$stateChangeError",function(){$state.go("login")})}),angular.module("trackto").directive("pageTitle",pageTitle).directive("sideNavigation",sideNavigation).directive("iboxTools",iboxTools).directive("objectiveHeader",objectiveHeader).directive("minimalizeSidebar",minimalizeSidebar).directive("subobjectiveEditModal",subobjectiveEditModal),angular.module("trackto").controller("CreateObjectiveController",["$scope","$window","toastr","StepsService","ObjectiveFactory",CreateObjectiveController]),angular.module("trackto").controller("LoginController",["$scope","$window","toastr","UserFactory",LoginController]),angular.module("trackto").controller("MainCtrl",["$scope",MainCtrl]),angular.module("trackto").controller("ObjectiveDashboard",["$scope","DashboardFactory",ObjectiveDashboard]),angular.module("trackto").controller("ObjectiveDetailCtrl",["$scope","$stateParams","$window","toastr","ObjectiveFactory",ObjectiveDetailCtrl]),angular.module("trackto").controller("ObjectivesNavigationCtrl",["$scope","ObjectiveFactory",ObjectivesNavigationCtrl]),angular.module("trackto").controller("ObjectivesTodayCtrl",["$scope","toastr","ObjectiveFactory",ObjectivesTodayCtrl]),angular.module("trackto").factory("ObjectiveFactory",["$http",ObjectiveFactory]).factory("UserFactory",["$http",UserFactory]).factory("DashboardFactory",["$http",DashboardFactory]);